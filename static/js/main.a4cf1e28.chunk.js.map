{"version":3,"sources":["store/features/citySlice.js","components/search/search.jsx","components/current/current.jsx","components/requests-history/requests-history.jsx","components/forecast/forecast-day/forecast-day.jsx","components/forecast/forecast.jsx","services/api.js","App.jsx","store/index.js","index.js"],"names":["citySlice","createSlice","name","initialState","value","reducers","changeCity","state","action","console","log","payload","actions","getCity","city","Search","isLoading","onSearch","useSelector","dispatch","useDispatch","buttonText","className","type","placeholder","onChange","event","target","onKeyDown","key","disabled","onClick","Current","currentWeather","weather","temp","Math","round","main","tempSign","src","icon","alt","RequestsHistory","requestsHistory","historyLimit","onChangeCity","map","savedCity","index","ForecastDay","dayWeather","day","dayjs","dt_txt","format","Forecast","forecast","dt","customAxios","axios","create","baseURL","baseParams","App","useState","setCurrentWeather","isCurrentWeatherLoading","setIsCurrentWeatherLoading","setForecast","isForecastLoading","setIsForecastLoading","setRequestsHistory","search","currentCity","prevState","newHistory","length","slice","get","then","data","getCurrentWeatherByCity","finally","list","filter","includes","getForecastByCity","useEffect","configureStore","reducer","cityReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a4cf1e28.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const citySlice = createSlice({\n    name: 'city',\n    initialState: {\n        value: 'Kyiv'\n    },\n    reducers: {\n        changeCity: (state, action) => {\n            console.log(\n                { action }\n            );\n\n            state.value = action.payload\n        }\n    }\n})\n\nexport const { changeCity } = citySlice.actions\n\nexport const getCity = state => state.city.value;\n\nexport default citySlice.reducer","import { useSelector, useDispatch } from 'react-redux'\nimport { getCity, changeCity } from '../../store/features/citySlice';\nimport './search.css';\n\nexport default function Search({ isLoading, onSearch }) {\n    const city = useSelector(getCity)\n    const dispatch = useDispatch();\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            onSearch()\n        }\n    }\n    const buttonText = isLoading ? 'Loading...' : 'Search'\n\n    return (\n        <div className=\"Search\">\n            <input\n                className=\"Search__input\"\n                type=\"text\"\n                placeholder=\"Location\"\n                name=\"search\"\n                value={city}\n                onChange={(event) => dispatch(changeCity(event.target.value))}\n                onKeyDown={handleKeyDown}\n            />\n            <button className=\"Search__button\" disabled={isLoading} onClick={() => onSearch()}>{buttonText}</button>\n        </div>\n    );\n}\n","\nimport \"./current.css\";\n\nexport default function Current({ currentWeather }) {\n\n    const weather = currentWeather.weather[0];\n    const temp = Math.round(currentWeather.main.temp);\n    const isPositive = temp >= 0;\n    const tempSign = isPositive ? '+' : '';\n\n    return (\n        <div className=\"Current\">\n            <div className=\"Current__info\">\n                <img\n                    className=\"Current__weather-icon\"\n                    src={\n                        \"https://openweathermap.org/img/wn/\" +\n                        weather.icon +\n                        \".png\"\n                    }\n                    alt={weather.main}\n                />\n                <div>\n                    <h2 className=\"other-info__city\">\n                        {currentWeather.name} (Today)\n                    </h2>\n                    <h3 className=\"other-info__city\">\n                        {tempSign}{temp} °C\n                    </h3>\n                </div>\n            </div>\n        </div>\n    );\n}","import \"./requests-history.css\";\n\n\nexport default function RequestsHistory({ requestsHistory, historyLimit, onChangeCity }) {\n\n    return (\n        <div className=\"RequestsHistory\">\n            <h2 className=\"RequestsHistory__title\">Last {historyLimit} queries</h2>\n\n            <div className=\"RequestsHistory__queries\">\n                {requestsHistory.map((savedCity, index) => (\n                    <span\n                        className=\"RequestsHistory__queries item\"\n                        key={index}\n                        onClick={() => onChangeCity(savedCity)}\n                    >\n                        {savedCity}\n                    </span>\n                ))}\n            </div>\n        </div>\n    );\n}\n","import * as dayjs from 'dayjs'\n\nimport \"./forecast-day.css\";\n\nexport default function ForecastDay({ dayWeather }) {\n    const weather = dayWeather.weather[0];\n    const temp = Math.round(dayWeather.main.temp);\n    const isPositive = temp >= 0;\n    const tempSign = isPositive ? '+' : '';\n    const day = dayjs(dayWeather.dt_txt).format('dddd')\n\n\n    return <div className=\"ForecastDay\">\n        <div className=\"ForecastDay__title\">\n            {day}\n        </div>\n        <div className=\"ForecastDay__header\">\n\n            <img\n                className=\"ForecastDay__weather-icon\"\n                src={\n                    \"https://openweathermap.org/img/wn/\" +\n                    weather.icon +\n                    \".png\"\n                }\n                alt={weather.main}\n            />\n            <span>{tempSign}{temp}°C</span>\n        </div>\n    </div>\n}\n","\nimport ForecastDay from './forecast-day/forecast-day'\nimport \"./forecast.css\";\n\nexport default function Forecast({ forecast }) {\n    return <div className=\"Forecast\">\n        {forecast.map(dayWeather => <ForecastDay key={dayWeather.dt} dayWeather={dayWeather} />)}\n    </div>;\n}\n","import axios from 'axios';\n\n\nconst customAxios = axios.create({\n    baseURL: 'https://api.openweathermap.org/data/2.5'\n})\nconst apiKey = 'ac50c00be361ae51a28bda0f97697967'\nconst baseParams = `&units=metric&appid=${apiKey}`;\n\nexport const getCurrentWeatherByCity = (city = 'Kyiv') => {\n    return customAxios.get(`/weather?q=${city}${baseParams}`).then(({ data }) => data)\n}\n\nexport const getForecastByCity = (city = 'Kyiv') => {\n    return customAxios.get(`/forecast?q=${city}${baseParams}`).then(({ data }) => {\n        return {\n            city: data.city,\n            forecast: data.list.filter(day => day.dt_txt.includes('12:00:00')) // return filtered by midday\n        }\n    })\n}\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Search from \"./components/search/search\";\nimport Current from \"./components/current/current\";\nimport RequestsHistory from \"./components/requests-history/requests-history\";\nimport Forecast from \"./components/forecast/forecast\";\nimport { getCurrentWeatherByCity, getForecastByCity } from \"./services/api\";\nimport { getCity, changeCity } from './store/features/citySlice';\n\nimport \"./App.css\";\n\nconst HISTORY_LIMIT = 10;\n\nfunction App() {\n  const city = useSelector(getCity)\n  const dispatch = useDispatch();\n  const setCity = (cityName) => {\n    dispatch(changeCity(cityName))\n  }\n\n  const [currentWeather, setCurrentWeather] = useState();\n  const [isCurrentWeatherLoading, setIsCurrentWeatherLoading] =\n    useState(true);\n  const [forecast, setForecast] = useState([]);\n  const [isForecastLoading, setIsForecastLoading] = useState(true);\n  const [requestsHistory, setRequestsHistory] = useState([]);\n\n  const search = (currentCity) => {\n    currentCity = currentCity || city;\n\n    if (currentCity !== city) setCity(currentCity);\n\n    setRequestsHistory((prevState) => {\n      const newHistory = [currentCity, ...prevState];\n\n      return newHistory.length <= HISTORY_LIMIT\n        ? newHistory\n        : newHistory.slice(0, HISTORY_LIMIT);\n    });\n\n    setIsCurrentWeatherLoading(true);\n    setIsForecastLoading(true);\n\n    getCurrentWeatherByCity(currentCity)\n      .then(setCurrentWeather)\n      .finally(() => setIsCurrentWeatherLoading(false));\n\n    getForecastByCity(currentCity)\n      .then((data) => {\n        setForecast(data.forecast);\n      })\n      .finally(() => setIsForecastLoading(false));\n  };\n\n  useEffect(() => {\n    search();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__container\">\n        <Search\n          onSearch={search}\n          isLoading={isCurrentWeatherLoading || isForecastLoading}\n        />\n\n        {currentWeather && <Current currentWeather={currentWeather} />}\n\n        <RequestsHistory\n          requestsHistory={requestsHistory}\n          historyLimit={HISTORY_LIMIT}\n          onChangeCity={search}\n        />\n\n        {forecast && <Forecast forecast={forecast} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport cityReducer from './features/citySlice'\n\nexport default configureStore({\n    reducer: {\n        city: cityReducer\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}